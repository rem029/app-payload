/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    'employee-questions': EmployeeQuestion;
    'employee-questions-email-status': EmployeeQuestionsEmailStatus;
    'employee-responses': EmployeeResponse;
    'chat-history': ChatHistory;
    'chat-search-files': ChatSearchFile;
    'survey-customer-feedbacks': SurveyCustomerFeedback;
    'employee-benefits': EmployeeBenefit;
    'employee-benefits-category': EmployeeBenefitsCategory;
    'employee-banner': EmployeeBanner;
    'ifly-waiver-forms': IflyWaiverForm;
    users: User;
    'user-roles': UserRole;
    'user-access': UserAccess;
    operators: Operator;
    department: Department;
    contents: Content;
    media: Media;
    'survey-net-promoter': SurveyNetPromoter;
    variables: Variable;
    'health-check': HealthCheck;
    items: Item;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-questions".
 */
export interface EmployeeQuestion {
  id: number;
  department?: (number | null) | Department;
  default_title?: string | null;
  default_subtitle?: string | null;
  item?:
    | {
        type?: ('text' | 'checkbox') | null;
        language?: ('en' | 'ar' | 'fr') | null;
        title?: string | null;
        subtitle?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "department".
 */
export interface Department {
  id: number;
  name?: string | null;
  department_subs?:
    | {
        name?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-questions-email-status".
 */
export interface EmployeeQuestionsEmailStatus {
  id: number;
  anonymous_id?: string | null;
  email?: string | null;
  status?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-responses".
 */
export interface EmployeeResponse {
  id: number;
  anonymous_id: string;
  department?: string | null;
  department_sub?: string | null;
  employee_comments?: string | null;
  questions?:
    | {
        question: number | EmployeeQuestion;
        response: 'strongly-disagree' | 'disagree' | 'i-do-not-know' | 'agree' | 'strongly-agree';
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat-history".
 */
export interface ChatHistory {
  id: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat-search-files".
 */
export interface ChatSearchFile {
  id: number;
  name: string;
  media: number | Media;
  parsed_text?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "survey-customer-feedbacks".
 */
export interface SurveyCustomerFeedback {
  id: number;
  visit_date?: string | null;
  receipt_id?: string | null;
  visited_restaurant?: string | null;
  meal_period?: string | null;
  visit_frequency?: ('daily' | 'weekly' | 'monthly' | 'first-time') | null;
  rating_greeting?: ('poor' | 'average' | 'good' | 'very-good' | 'excellent') | null;
  rating_service?: ('poor' | 'average' | 'good' | 'very-good' | 'excellent') | null;
  rating_beverage?: ('poor' | 'average' | 'good' | 'very-good' | 'excellent') | null;
  rating_food?: ('poor' | 'average' | 'good' | 'very-good' | 'excellent') | null;
  rating_value_for_money?: ('poor' | 'average' | 'good' | 'very-good' | 'excellent') | null;
  rating_cleanliness?: ('poor' | 'average' | 'good' | 'very-good' | 'excellent') | null;
  discovery_method?: string | null;
  will_visit_again?: string | null;
  manager_visit?: string | null;
  favorite_restaurant?: string | null;
  additional_comments?: string | null;
  name?: string | null;
  telephone_number?: string | null;
  birth_date?: string | null;
  email_address?: string | null;
  marketing_consent?: boolean | null;
  discovery_text?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-benefits".
 */
export interface EmployeeBenefit {
  id: number;
  name: string;
  general_info: {
    category: (number | EmployeeBenefitsCategory)[];
    media?: (number | null) | Media;
  };
  contact_info?: {
    phone?: string | null;
    email?: string | null;
    point_of_contact?: string | null;
    address?: string | null;
  };
  expiry_date?: string | null;
  external_link?: string | null;
  benefits?:
    | {
        title?: string | null;
        description?: string | null;
        printemps?: string | null;
        dohaoasis?: string | null;
        banyantree?: string | null;
        id?: string | null;
      }[]
    | null;
  attachments?:
    | {
        media: number | Media;
        id?: string | null;
      }[]
    | null;
  terms_and_condition?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-benefits-category".
 */
export interface EmployeeBenefitsCategory {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-banner".
 */
export interface EmployeeBanner {
  id: number;
  name: string;
  media: number | Media;
  link?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ifly-waiver-forms".
 */
export interface IflyWaiverForm {
  id: number;
  name: string;
  qid: string;
  phone: string;
  dependents?:
    | {
        name: string;
        qid: string;
        phone?: string | null;
        id?: string | null;
      }[]
    | null;
  signature_svg: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  operator?: (number | null) | Operator;
  role?: (number | null) | UserRole;
  access?: (number | null) | UserAccess;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "operators".
 */
export interface Operator {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-roles".
 */
export interface UserRole {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-access".
 */
export interface UserAccess {
  id: number;
  name?: string | null;
  access?:
    | {
        name?: string | null;
        hidden?: boolean | null;
        read?: boolean | null;
        create?: boolean | null;
        update?: boolean | null;
        admin?: boolean | null;
        delete?: boolean | null;
        access?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contents".
 */
export interface Content {
  id: number;
  header?:
    | {
        content?: string | null;
        language?: ('en' | 'ar' | 'fr') | null;
        id?: string | null;
      }[]
    | null;
  info?:
    | {
        content?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        language?: ('en' | 'ar' | 'fr') | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "survey-net-promoter".
 */
export interface SurveyNetPromoter {
  id: number;
  visit_date?: string | null;
  receipt_id?: string | null;
  customer_feedback?: ('detractor' | 'neutral' | 'promoter') | null;
  customer_feedback_number?: number | null;
  customer_comments?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variables".
 */
export interface Variable {
  id: number;
  name: string;
  description?: string | null;
  value?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "health-check".
 */
export interface HealthCheck {
  id: number;
  name?: string | null;
  url: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "items".
 */
export interface Item {
  id: number;
  name: string;
  description?: string | null;
  items?:
    | {
        values?:
          | {
              key: string;
              value?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}